name: Criar release e arquivo .tar.gz

on:
#  push:
#    branches:
#      - main

  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: "With TMATE"
        required: false
        default: false

#  schedule:  # Executa automaticamente toda sexta-feira às 05:00
#    - cron: '0 5 * * 5'

  repository_dispatch:
    types:
      - webhook
      - "**"

env:
  GITHUB_TOKEN: ${{ secrets.ORGANIZATION_TOKEN }}

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
#      - name: Instalar TMATE
#        run: sudo apt-get update && sudo apt-get install -y tmate
#
#      - name: Configurar TMATE para depuração
#        uses: mxschmitt/action-tmate@v3
#        if: ${{ github.event.inputs.debug_enabled == 'true' }}

      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Obter a hora atual
        run: echo "time=$(date +'%Y.%m.%d-%H%M')" >> $GITHUB_ENV

      - name: Obter nome do repositório
        run: echo "repo_name=$(basename $GITHUB_REPOSITORY)" >> $GITHUB_ENV

      - name: Criar arquivo .tar.gz
        run: |
          tar -cf "${{ env.repo_name }}.tar.gz" .

      - name: Calcular MD5 do arquivo .tar.gz
        run: |
          if [[ -f "${{ env.repo_name }}.tar.gz" ]]; then
            md5sum "${{ env.repo_name }}.tar.gz" > "${{ env.repo_name }}.tar.gz.md5"
            echo "MD5 hash calculado:"
            cat "${{ env.repo_name }}.tar.gz.md5"
          else
            echo "Erro: Arquivo .tar.gz não encontrado"
            exit 1
          fi

      - name: Salvar artefatos
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: |
            ${{ env.repo_name }}.tar.gz
            ${{ env.repo_name }}.tar.gz.md5

      - name: Criar release
        id: create-release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.time }}
          release_name: Release ${{ env.time }}
          body: |
            - **Data e Hora        :** ${{ env.time }}
            - **Nome do Repositório:** ${{ env.repo_name }}
            - **Arquivo tar        :** ${{ env.repo_name }}.tar.gz
            - **Arquivo md5        :** ${{ env.repo_name }}.tar.gz.md5
          draft: false
          prerelease: false

      - name: Fazer upload do arquivo .tar.gz no release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./${{ env.repo_name }}.tar.gz
          asset_name: ${{ env.repo_name }}.tar.gz
          asset_content_type: application/gzip

      - name: Fazer upload do arquivo .tar.gz.md5 no release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./${{ env.repo_name }}.tar.gz.md5
          asset_name: ${{ env.repo_name }}.tar.gz.md5
          asset_content_type: text/plain
